package com.synex.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.hackerrank.files.controller.RequestController;
import com.synex.model.Xfile;
import com.synex.repository.FileRepository;

public class FileController {
	
	private static final Logger logger = LoggerFactory.getLogger(FileController.class);

	@Autowired
	FileRepository filerepo;
	
	@PostMapping("/uploader")
	public ResponseEntity<String> uploadFile(@RequestParam("fileGroup") String fileGroup, @RequestParam("files") MultipartFile[] files) {
		
		
		if(files.length == 0) {
			return new ResponseEntity<String>("please enter the file", HttpStatus.NOT_ACCEPTABLE);
		}
		
		for(MultipartFile file: files) {
//			try {
//			
//			}catch(IOException e){
//				
//			}	
		}
		
		for(MultipartFile file: files) {
			try {
				
			}catch(Exception e){
				
			}
		}
		
		
		return new ResponseEntity<String>("Could not save file ", HttpStatus.NOT_FOUND);
	}
	
	@GetMapping("/downloader")
	public String downloadFile(@PathVariable String fileGroup, HttpServletRequest request) {
		
		List<Xfile> files = filerepo.findByFileGroup(fileGroup);
		
		if(files == null) {
//			try {
//				
//			}catch(IOException e){
//				
//			}
		}
		
		return null;
	}
}
