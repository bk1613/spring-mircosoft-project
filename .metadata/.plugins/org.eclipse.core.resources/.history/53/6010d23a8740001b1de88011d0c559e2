package com.synex.controller;

public class StackBuild<T> {

	Node last;
	Node top;
	class Node{
		T data;
		Node next;
		
		Node(T a){
			data = a;
			next = null;
		}
	}
	
	public void push(T data){
		Node newnode = new Node(data);
		if(top == null) {
			top = newnode;
			last = newnode;
		}else {
			newnode.next = top;
			top = newnode;
		}
	}
	
	public void pop() {
		Node currnode = top;
		if(currnode == null) {
			System.out.println("stack empty");
		}else {
			top = top.next;
		}
	}
	
	public T top() {
		
		return top.data;
	}
	
	public int getMin() {
		Node currnode = top;
		int min =0;
		while(currnode != null) {
			if(min > (int)currnode.data) {
				min = (int)currnode.data;
			}
			currnode = currnode.next;
		}
		return min;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String[] cmds = {"MinStack","push","push","push","getMin","pop","top","getMin"};
//		int[][] arr = {[],[-2],[0],[-3],[],[],[],[]};
		StackBuild minstack = new StackBuild();
		minstack.push(-2);
		minstack.push(0);
		minstack.push(-3);
		System.out.println(minstack.getMin());
		minstack.pop();
		System.out.println(minstack.top());
	}

}
